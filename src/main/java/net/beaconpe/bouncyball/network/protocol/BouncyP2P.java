// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BouncyP2P.proto

package net.beaconpe.bouncyball.network.protocol;

public final class BouncyP2P {
    private BouncyP2P() {}
    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }
    /**
     * Protobuf enum {@code net.beaconpe.bouncyball.network.protocol.PacketID}
     *
     * <pre>
     **
     * All the Message Packet ID's
     * </pre>
     */
    public enum PacketID
            implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>SERVER_REGISTRATION_REQUEST = 0;</code>
         */
        SERVER_REGISTRATION_REQUEST(0, 0),
        /**
         * <code>SERVER_REGISTRATION_ACCEPTED = 1;</code>
         */
        SERVER_REGISTRATION_ACCEPTED(1, 1),
        /**
         * <code>SERVER_REGISTRATION_DENIED = 2;</code>
         */
        SERVER_REGISTRATION_DENIED(2, 2),
        /**
         * <code>CLOSE_CONNECTION = 3;</code>
         */
        CLOSE_CONNECTION(3, 3),
        /**
         * <code>SEND_MESSAGE = 4;</code>
         */
        SEND_MESSAGE(4, 4),
        ;

        /**
         * <code>SERVER_REGISTRATION_REQUEST = 0;</code>
         */
        public static final int SERVER_REGISTRATION_REQUEST_VALUE = 0;
        /**
         * <code>SERVER_REGISTRATION_ACCEPTED = 1;</code>
         */
        public static final int SERVER_REGISTRATION_ACCEPTED_VALUE = 1;
        /**
         * <code>SERVER_REGISTRATION_DENIED = 2;</code>
         */
        public static final int SERVER_REGISTRATION_DENIED_VALUE = 2;
        /**
         * <code>CLOSE_CONNECTION = 3;</code>
         */
        public static final int CLOSE_CONNECTION_VALUE = 3;
        /**
         * <code>SEND_MESSAGE = 4;</code>
         */
        public static final int SEND_MESSAGE_VALUE = 4;


        public final int getNumber() { return value; }

        public static PacketID valueOf(int value) {
            switch (value) {
                case 0: return SERVER_REGISTRATION_REQUEST;
                case 1: return SERVER_REGISTRATION_ACCEPTED;
                case 2: return SERVER_REGISTRATION_DENIED;
                case 3: return CLOSE_CONNECTION;
                case 4: return SEND_MESSAGE;
                default: return null;
            }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<PacketID>
        internalGetValueMap() {
            return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<PacketID>
                internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<PacketID>() {
                    public PacketID findValueByNumber(int number) {
                        return PacketID.valueOf(number);
                    }
                };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
            return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
            return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.getDescriptor().getEnumTypes().get(0);
        }

        private static final PacketID[] VALUES = values();

        public static PacketID valueOf(
                com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
                throw new java.lang.IllegalArgumentException(
                        "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private PacketID(int index, int value) {
            this.index = index;
            this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:net.beaconpe.bouncyball.network.protocol.PacketID)
    }

    public interface ServerRegistrationRequestOrBuilder extends
            // @@protoc_insertion_point(interface_extends:net.beaconpe.bouncyball.network.protocol.ServerRegistrationRequest)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        boolean hasPacketID();
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID();

        /**
         * <code>required string serverName = 2;</code>
         *
         * <pre>
         **
         * The server's friendly name.
         * </pre>
         */
        boolean hasServerName();
        /**
         * <code>required string serverName = 2;</code>
         *
         * <pre>
         **
         * The server's friendly name.
         * </pre>
         */
        java.lang.String getServerName();
        /**
         * <code>required string serverName = 2;</code>
         *
         * <pre>
         **
         * The server's friendly name.
         * </pre>
         */
        com.google.protobuf.ByteString
        getServerNameBytes();

        /**
         * <code>required uint64 proxyID = 3;</code>
         *
         * <pre>
         **
         * The proxy ID given by the proxy for registration.
         * </pre>
         */
        boolean hasProxyID();
        /**
         * <code>required uint64 proxyID = 3;</code>
         *
         * <pre>
         **
         * The proxy ID given by the proxy for registration.
         * </pre>
         */
        long getProxyID();
    }
    /**
     * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.ServerRegistrationRequest}
     *
     * <pre>
     **
     * Server -&gt; Proxy
     * Server Registration Request (0x01).
     * Sent whenever a server would like to register themselves to the proxy.
     * </pre>
     */
    public static final class ServerRegistrationRequest extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:net.beaconpe.bouncyball.network.protocol.ServerRegistrationRequest)
            ServerRegistrationRequestOrBuilder {
        // Use ServerRegistrationRequest.newBuilder() to construct.
        private ServerRegistrationRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private ServerRegistrationRequest(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ServerRegistrationRequest defaultInstance;
        public static ServerRegistrationRequest getDefaultInstance() {
            return defaultInstance;
        }

        public ServerRegistrationRequest getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private ServerRegistrationRequest(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                packetID_ = value;
                            }
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            serverName_ = bs;
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            proxyID_ = input.readUInt64();
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest.Builder.class);
        }

        public static com.google.protobuf.Parser<ServerRegistrationRequest> PARSER =
                new com.google.protobuf.AbstractParser<ServerRegistrationRequest>() {
                    public ServerRegistrationRequest parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new ServerRegistrationRequest(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<ServerRegistrationRequest> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int PACKETID_FIELD_NUMBER = 1;
        private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_;
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public boolean hasPacketID() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
            return packetID_;
        }

        public static final int SERVERNAME_FIELD_NUMBER = 2;
        private java.lang.Object serverName_;
        /**
         * <code>required string serverName = 2;</code>
         *
         * <pre>
         **
         * The server's friendly name.
         * </pre>
         */
        public boolean hasServerName() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string serverName = 2;</code>
         *
         * <pre>
         **
         * The server's friendly name.
         * </pre>
         */
        public java.lang.String getServerName() {
            java.lang.Object ref = serverName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    serverName_ = s;
                }
                return s;
            }
        }
        /**
         * <code>required string serverName = 2;</code>
         *
         * <pre>
         **
         * The server's friendly name.
         * </pre>
         */
        public com.google.protobuf.ByteString
        getServerNameBytes() {
            java.lang.Object ref = serverName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                serverName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PROXYID_FIELD_NUMBER = 3;
        private long proxyID_;
        /**
         * <code>required uint64 proxyID = 3;</code>
         *
         * <pre>
         **
         * The proxy ID given by the proxy for registration.
         * </pre>
         */
        public boolean hasProxyID() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required uint64 proxyID = 3;</code>
         *
         * <pre>
         **
         * The proxy ID given by the proxy for registration.
         * </pre>
         */
        public long getProxyID() {
            return proxyID_;
        }

        private void initFields() {
            packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            serverName_ = "";
            proxyID_ = 0L;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasPacketID()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasServerName()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasProxyID()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, packetID_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getServerNameBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeUInt64(3, proxyID_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, packetID_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getServerNameBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt64Size(3, proxyID_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.ServerRegistrationRequest}
         *
         * <pre>
         **
         * Server -&gt; Proxy
         * Server Registration Request (0x01).
         * Sent whenever a server would like to register themselves to the proxy.
         * </pre>
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:net.beaconpe.bouncyball.network.protocol.ServerRegistrationRequest)
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequestOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest.Builder.class);
            }

            // Construct using net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                bitField0_ = (bitField0_ & ~0x00000001);
                serverName_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                proxyID_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_descriptor;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest getDefaultInstanceForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest.getDefaultInstance();
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest build() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest buildPartial() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest result = new net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.packetID_ = packetID_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.serverName_ = serverName_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.proxyID_ = proxyID_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest) {
                    return mergeFrom((net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest other) {
                if (other == net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest.getDefaultInstance()) return this;
                if (other.hasPacketID()) {
                    setPacketID(other.getPacketID());
                }
                if (other.hasServerName()) {
                    bitField0_ |= 0x00000002;
                    serverName_ = other.serverName_;
                    onChanged();
                }
                if (other.hasProxyID()) {
                    setProxyID(other.getProxyID());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasPacketID()) {

                    return false;
                }
                if (!hasServerName()) {

                    return false;
                }
                if (!hasProxyID()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationRequest) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public boolean hasPacketID() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
                return packetID_;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder setPacketID(net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                packetID_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder clearPacketID() {
                bitField0_ = (bitField0_ & ~0x00000001);
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                onChanged();
                return this;
            }

            private java.lang.Object serverName_ = "";
            /**
             * <code>required string serverName = 2;</code>
             *
             * <pre>
             **
             * The server's friendly name.
             * </pre>
             */
            public boolean hasServerName() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required string serverName = 2;</code>
             *
             * <pre>
             **
             * The server's friendly name.
             * </pre>
             */
            public java.lang.String getServerName() {
                java.lang.Object ref = serverName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        serverName_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>required string serverName = 2;</code>
             *
             * <pre>
             **
             * The server's friendly name.
             * </pre>
             */
            public com.google.protobuf.ByteString
            getServerNameBytes() {
                java.lang.Object ref = serverName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    serverName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>required string serverName = 2;</code>
             *
             * <pre>
             **
             * The server's friendly name.
             * </pre>
             */
            public Builder setServerName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                serverName_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required string serverName = 2;</code>
             *
             * <pre>
             **
             * The server's friendly name.
             * </pre>
             */
            public Builder clearServerName() {
                bitField0_ = (bitField0_ & ~0x00000002);
                serverName_ = getDefaultInstance().getServerName();
                onChanged();
                return this;
            }
            /**
             * <code>required string serverName = 2;</code>
             *
             * <pre>
             **
             * The server's friendly name.
             * </pre>
             */
            public Builder setServerNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                serverName_ = value;
                onChanged();
                return this;
            }

            private long proxyID_ ;
            /**
             * <code>required uint64 proxyID = 3;</code>
             *
             * <pre>
             **
             * The proxy ID given by the proxy for registration.
             * </pre>
             */
            public boolean hasProxyID() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>required uint64 proxyID = 3;</code>
             *
             * <pre>
             **
             * The proxy ID given by the proxy for registration.
             * </pre>
             */
            public long getProxyID() {
                return proxyID_;
            }
            /**
             * <code>required uint64 proxyID = 3;</code>
             *
             * <pre>
             **
             * The proxy ID given by the proxy for registration.
             * </pre>
             */
            public Builder setProxyID(long value) {
                bitField0_ |= 0x00000004;
                proxyID_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required uint64 proxyID = 3;</code>
             *
             * <pre>
             **
             * The proxy ID given by the proxy for registration.
             * </pre>
             */
            public Builder clearProxyID() {
                bitField0_ = (bitField0_ & ~0x00000004);
                proxyID_ = 0L;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:net.beaconpe.bouncyball.network.protocol.ServerRegistrationRequest)
        }

        static {
            defaultInstance = new ServerRegistrationRequest(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:net.beaconpe.bouncyball.network.protocol.ServerRegistrationRequest)
    }

    public interface ServerRegistrationAcceptedOrBuilder extends
            // @@protoc_insertion_point(interface_extends:net.beaconpe.bouncyball.network.protocol.ServerRegistrationAccepted)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        boolean hasPacketID();
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID();
    }
    /**
     * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.ServerRegistrationAccepted}
     *
     * <pre>
     **
     * Proxy -&gt; Server
     * ServerRegistrationAccepted (0x01).
     * Sent by the proxy when the registration was accepted.
     * </pre>
     */
    public static final class ServerRegistrationAccepted extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:net.beaconpe.bouncyball.network.protocol.ServerRegistrationAccepted)
            ServerRegistrationAcceptedOrBuilder {
        // Use ServerRegistrationAccepted.newBuilder() to construct.
        private ServerRegistrationAccepted(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private ServerRegistrationAccepted(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ServerRegistrationAccepted defaultInstance;
        public static ServerRegistrationAccepted getDefaultInstance() {
            return defaultInstance;
        }

        public ServerRegistrationAccepted getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private ServerRegistrationAccepted(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                packetID_ = value;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted.Builder.class);
        }

        public static com.google.protobuf.Parser<ServerRegistrationAccepted> PARSER =
                new com.google.protobuf.AbstractParser<ServerRegistrationAccepted>() {
                    public ServerRegistrationAccepted parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new ServerRegistrationAccepted(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<ServerRegistrationAccepted> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int PACKETID_FIELD_NUMBER = 1;
        private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_;
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public boolean hasPacketID() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
            return packetID_;
        }

        private void initFields() {
            packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasPacketID()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, packetID_.getNumber());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, packetID_.getNumber());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.ServerRegistrationAccepted}
         *
         * <pre>
         **
         * Proxy -&gt; Server
         * ServerRegistrationAccepted (0x01).
         * Sent by the proxy when the registration was accepted.
         * </pre>
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:net.beaconpe.bouncyball.network.protocol.ServerRegistrationAccepted)
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAcceptedOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted.Builder.class);
            }

            // Construct using net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_descriptor;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted getDefaultInstanceForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted.getDefaultInstance();
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted build() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted buildPartial() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted result = new net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.packetID_ = packetID_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted) {
                    return mergeFrom((net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted other) {
                if (other == net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted.getDefaultInstance()) return this;
                if (other.hasPacketID()) {
                    setPacketID(other.getPacketID());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasPacketID()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationAccepted) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public boolean hasPacketID() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
                return packetID_;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder setPacketID(net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                packetID_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder clearPacketID() {
                bitField0_ = (bitField0_ & ~0x00000001);
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:net.beaconpe.bouncyball.network.protocol.ServerRegistrationAccepted)
        }

        static {
            defaultInstance = new ServerRegistrationAccepted(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:net.beaconpe.bouncyball.network.protocol.ServerRegistrationAccepted)
    }

    public interface ServerRegistrationDeniedOrBuilder extends
            // @@protoc_insertion_point(interface_extends:net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        boolean hasPacketID();
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID();

        /**
         * <code>optional .net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason reason = 2 [default = UNSTATED];</code>
         *
         * <pre>
         **
         * Reason for denial. Default is UNSTATED.
         * </pre>
         */
        boolean hasReason();
        /**
         * <code>optional .net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason reason = 2 [default = UNSTATED];</code>
         *
         * <pre>
         **
         * Reason for denial. Default is UNSTATED.
         * </pre>
         */
        net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason getReason();

        /**
         * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
         *
         * <pre>
         **
         * Reason for denial as a string. Only should be sent if reason is UNSTATED.
         * </pre>
         */
        boolean hasOtherReason();
        /**
         * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
         *
         * <pre>
         **
         * Reason for denial as a string. Only should be sent if reason is UNSTATED.
         * </pre>
         */
        java.lang.String getOtherReason();
        /**
         * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
         *
         * <pre>
         **
         * Reason for denial as a string. Only should be sent if reason is UNSTATED.
         * </pre>
         */
        com.google.protobuf.ByteString
        getOtherReasonBytes();
    }
    /**
     * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied}
     *
     * <pre>
     **
     * Proxy -&gt; Server
     * ServerRegistrationDenied (0x02).
     * Sent by the proxy when the registration was denied.
     * </pre>
     */
    public static final class ServerRegistrationDenied extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied)
            ServerRegistrationDeniedOrBuilder {
        // Use ServerRegistrationDenied.newBuilder() to construct.
        private ServerRegistrationDenied(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private ServerRegistrationDenied(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ServerRegistrationDenied defaultInstance;
        public static ServerRegistrationDenied getDefaultInstance() {
            return defaultInstance;
        }

        public ServerRegistrationDenied getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private ServerRegistrationDenied(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                packetID_ = value;
                            }
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason value = net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                reason_ = value;
                            }
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000004;
                            otherReason_ = bs;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Builder.class);
        }

        public static com.google.protobuf.Parser<ServerRegistrationDenied> PARSER =
                new com.google.protobuf.AbstractParser<ServerRegistrationDenied>() {
                    public ServerRegistrationDenied parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new ServerRegistrationDenied(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<ServerRegistrationDenied> getParserForType() {
            return PARSER;
        }

        /**
         * Protobuf enum {@code net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason}
         */
        public enum Reason
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>UNSTATED = 0;</code>
             */
            UNSTATED(0, 0),
            /**
             * <code>PROXY_ID_INVALID = 1;</code>
             */
            PROXY_ID_INVALID(1, 1),
            /**
             * <code>SERVER_NAME_INVALID = 2;</code>
             */
            SERVER_NAME_INVALID(2, 2),
            /**
             * <code>OTHER = 3;</code>
             */
            OTHER(3, 3),
            ;

            /**
             * <code>UNSTATED = 0;</code>
             */
            public static final int UNSTATED_VALUE = 0;
            /**
             * <code>PROXY_ID_INVALID = 1;</code>
             */
            public static final int PROXY_ID_INVALID_VALUE = 1;
            /**
             * <code>SERVER_NAME_INVALID = 2;</code>
             */
            public static final int SERVER_NAME_INVALID_VALUE = 2;
            /**
             * <code>OTHER = 3;</code>
             */
            public static final int OTHER_VALUE = 3;


            public final int getNumber() { return value; }

            public static Reason valueOf(int value) {
                switch (value) {
                    case 0: return UNSTATED;
                    case 1: return PROXY_ID_INVALID;
                    case 2: return SERVER_NAME_INVALID;
                    case 3: return OTHER;
                    default: return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Reason>
            internalGetValueMap() {
                return internalValueMap;
            }
            private static com.google.protobuf.Internal.EnumLiteMap<Reason>
                    internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Reason>() {
                        public Reason findValueByNumber(int number) {
                            return Reason.valueOf(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(index);
            }
            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }
            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.getDescriptor().getEnumTypes().get(0);
            }

            private static final Reason[] VALUES = values();

            public static Reason valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            private final int index;
            private final int value;

            private Reason(int index, int value) {
                this.index = index;
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason)
        }

        private int bitField0_;
        public static final int PACKETID_FIELD_NUMBER = 1;
        private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_;
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public boolean hasPacketID() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
            return packetID_;
        }

        public static final int REASON_FIELD_NUMBER = 2;
        private net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason reason_;
        /**
         * <code>optional .net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason reason = 2 [default = UNSTATED];</code>
         *
         * <pre>
         **
         * Reason for denial. Default is UNSTATED.
         * </pre>
         */
        public boolean hasReason() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason reason = 2 [default = UNSTATED];</code>
         *
         * <pre>
         **
         * Reason for denial. Default is UNSTATED.
         * </pre>
         */
        public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason getReason() {
            return reason_;
        }

        public static final int OTHERREASON_FIELD_NUMBER = 3;
        private java.lang.Object otherReason_;
        /**
         * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
         *
         * <pre>
         **
         * Reason for denial as a string. Only should be sent if reason is UNSTATED.
         * </pre>
         */
        public boolean hasOtherReason() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
         *
         * <pre>
         **
         * Reason for denial as a string. Only should be sent if reason is UNSTATED.
         * </pre>
         */
        public java.lang.String getOtherReason() {
            java.lang.Object ref = otherReason_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    otherReason_ = s;
                }
                return s;
            }
        }
        /**
         * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
         *
         * <pre>
         **
         * Reason for denial as a string. Only should be sent if reason is UNSTATED.
         * </pre>
         */
        public com.google.protobuf.ByteString
        getOtherReasonBytes() {
            java.lang.Object ref = otherReason_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                otherReason_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            reason_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason.UNSTATED;
            otherReason_ = "Not Sent: other reason.";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasPacketID()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, packetID_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, reason_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBytes(3, getOtherReasonBytes());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, packetID_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, reason_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(3, getOtherReasonBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied}
         *
         * <pre>
         **
         * Proxy -&gt; Server
         * ServerRegistrationDenied (0x02).
         * Sent by the proxy when the registration was denied.
         * </pre>
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied)
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDeniedOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Builder.class);
            }

            // Construct using net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                bitField0_ = (bitField0_ & ~0x00000001);
                reason_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason.UNSTATED;
                bitField0_ = (bitField0_ & ~0x00000002);
                otherReason_ = "Not Sent: other reason.";
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_descriptor;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied getDefaultInstanceForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.getDefaultInstance();
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied build() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied buildPartial() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied result = new net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.packetID_ = packetID_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.reason_ = reason_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.otherReason_ = otherReason_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied) {
                    return mergeFrom((net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied other) {
                if (other == net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.getDefaultInstance()) return this;
                if (other.hasPacketID()) {
                    setPacketID(other.getPacketID());
                }
                if (other.hasReason()) {
                    setReason(other.getReason());
                }
                if (other.hasOtherReason()) {
                    bitField0_ |= 0x00000004;
                    otherReason_ = other.otherReason_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasPacketID()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public boolean hasPacketID() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
                return packetID_;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder setPacketID(net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                packetID_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder clearPacketID() {
                bitField0_ = (bitField0_ & ~0x00000001);
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                onChanged();
                return this;
            }

            private net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason reason_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason.UNSTATED;
            /**
             * <code>optional .net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason reason = 2 [default = UNSTATED];</code>
             *
             * <pre>
             **
             * Reason for denial. Default is UNSTATED.
             * </pre>
             */
            public boolean hasReason() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional .net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason reason = 2 [default = UNSTATED];</code>
             *
             * <pre>
             **
             * Reason for denial. Default is UNSTATED.
             * </pre>
             */
            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason getReason() {
                return reason_;
            }
            /**
             * <code>optional .net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason reason = 2 [default = UNSTATED];</code>
             *
             * <pre>
             **
             * Reason for denial. Default is UNSTATED.
             * </pre>
             */
            public Builder setReason(net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                reason_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional .net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied.Reason reason = 2 [default = UNSTATED];</code>
             *
             * <pre>
             **
             * Reason for denial. Default is UNSTATED.
             * </pre>
             */
            public Builder clearReason() {
                bitField0_ = (bitField0_ & ~0x00000002);
                reason_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.ServerRegistrationDenied.Reason.UNSTATED;
                onChanged();
                return this;
            }

            private java.lang.Object otherReason_ = "Not Sent: other reason.";
            /**
             * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
             *
             * <pre>
             **
             * Reason for denial as a string. Only should be sent if reason is UNSTATED.
             * </pre>
             */
            public boolean hasOtherReason() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
             *
             * <pre>
             **
             * Reason for denial as a string. Only should be sent if reason is UNSTATED.
             * </pre>
             */
            public java.lang.String getOtherReason() {
                java.lang.Object ref = otherReason_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        otherReason_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
             *
             * <pre>
             **
             * Reason for denial as a string. Only should be sent if reason is UNSTATED.
             * </pre>
             */
            public com.google.protobuf.ByteString
            getOtherReasonBytes() {
                java.lang.Object ref = otherReason_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    otherReason_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
             *
             * <pre>
             **
             * Reason for denial as a string. Only should be sent if reason is UNSTATED.
             * </pre>
             */
            public Builder setOtherReason(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                otherReason_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
             *
             * <pre>
             **
             * Reason for denial as a string. Only should be sent if reason is UNSTATED.
             * </pre>
             */
            public Builder clearOtherReason() {
                bitField0_ = (bitField0_ & ~0x00000004);
                otherReason_ = getDefaultInstance().getOtherReason();
                onChanged();
                return this;
            }
            /**
             * <code>optional string otherReason = 3 [default = "Not Sent: other reason."];</code>
             *
             * <pre>
             **
             * Reason for denial as a string. Only should be sent if reason is UNSTATED.
             * </pre>
             */
            public Builder setOtherReasonBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                otherReason_ = value;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied)
        }

        static {
            defaultInstance = new ServerRegistrationDenied(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:net.beaconpe.bouncyball.network.protocol.ServerRegistrationDenied)
    }

    public interface CloseConnectionOrBuilder extends
            // @@protoc_insertion_point(interface_extends:net.beaconpe.bouncyball.network.protocol.CloseConnection)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        boolean hasPacketID();
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID();

        /**
         * <code>optional string reason = 2 [default = "Unstated reason"];</code>
         *
         * <pre>
         **
         * The reason for the disconnection.
         * </pre>
         */
        boolean hasReason();
        /**
         * <code>optional string reason = 2 [default = "Unstated reason"];</code>
         *
         * <pre>
         **
         * The reason for the disconnection.
         * </pre>
         */
        java.lang.String getReason();
        /**
         * <code>optional string reason = 2 [default = "Unstated reason"];</code>
         *
         * <pre>
         **
         * The reason for the disconnection.
         * </pre>
         */
        com.google.protobuf.ByteString
        getReasonBytes();
    }
    /**
     * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.CloseConnection}
     *
     * <pre>
     **
     * Two-Way
     * CloseConnection (0x03).
     * Sent by either side before the connection is terminated.
     * </pre>
     */
    public static final class CloseConnection extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:net.beaconpe.bouncyball.network.protocol.CloseConnection)
            CloseConnectionOrBuilder {
        // Use CloseConnection.newBuilder() to construct.
        private CloseConnection(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private CloseConnection(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final CloseConnection defaultInstance;
        public static CloseConnection getDefaultInstance() {
            return defaultInstance;
        }

        public CloseConnection getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private CloseConnection(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                packetID_ = value;
                            }
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            reason_ = bs;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection.Builder.class);
        }

        public static com.google.protobuf.Parser<CloseConnection> PARSER =
                new com.google.protobuf.AbstractParser<CloseConnection>() {
                    public CloseConnection parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new CloseConnection(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<CloseConnection> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int PACKETID_FIELD_NUMBER = 1;
        private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_;
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public boolean hasPacketID() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
            return packetID_;
        }

        public static final int REASON_FIELD_NUMBER = 2;
        private java.lang.Object reason_;
        /**
         * <code>optional string reason = 2 [default = "Unstated reason"];</code>
         *
         * <pre>
         **
         * The reason for the disconnection.
         * </pre>
         */
        public boolean hasReason() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string reason = 2 [default = "Unstated reason"];</code>
         *
         * <pre>
         **
         * The reason for the disconnection.
         * </pre>
         */
        public java.lang.String getReason() {
            java.lang.Object ref = reason_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    reason_ = s;
                }
                return s;
            }
        }
        /**
         * <code>optional string reason = 2 [default = "Unstated reason"];</code>
         *
         * <pre>
         **
         * The reason for the disconnection.
         * </pre>
         */
        public com.google.protobuf.ByteString
        getReasonBytes() {
            java.lang.Object ref = reason_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                reason_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            reason_ = "Unstated reason";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasPacketID()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, packetID_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getReasonBytes());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, packetID_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getReasonBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.CloseConnection}
         *
         * <pre>
         **
         * Two-Way
         * CloseConnection (0x03).
         * Sent by either side before the connection is terminated.
         * </pre>
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:net.beaconpe.bouncyball.network.protocol.CloseConnection)
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnectionOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection.Builder.class);
            }

            // Construct using net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                bitField0_ = (bitField0_ & ~0x00000001);
                reason_ = "Unstated reason";
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_descriptor;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection getDefaultInstanceForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection.getDefaultInstance();
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection build() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection buildPartial() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection result = new net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.packetID_ = packetID_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.reason_ = reason_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection) {
                    return mergeFrom((net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection other) {
                if (other == net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection.getDefaultInstance()) return this;
                if (other.hasPacketID()) {
                    setPacketID(other.getPacketID());
                }
                if (other.hasReason()) {
                    bitField0_ |= 0x00000002;
                    reason_ = other.reason_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasPacketID()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (net.beaconpe.bouncyball.network.protocol.BouncyP2P.CloseConnection) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public boolean hasPacketID() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
                return packetID_;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder setPacketID(net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                packetID_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder clearPacketID() {
                bitField0_ = (bitField0_ & ~0x00000001);
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                onChanged();
                return this;
            }

            private java.lang.Object reason_ = "Unstated reason";
            /**
             * <code>optional string reason = 2 [default = "Unstated reason"];</code>
             *
             * <pre>
             **
             * The reason for the disconnection.
             * </pre>
             */
            public boolean hasReason() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional string reason = 2 [default = "Unstated reason"];</code>
             *
             * <pre>
             **
             * The reason for the disconnection.
             * </pre>
             */
            public java.lang.String getReason() {
                java.lang.Object ref = reason_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        reason_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>optional string reason = 2 [default = "Unstated reason"];</code>
             *
             * <pre>
             **
             * The reason for the disconnection.
             * </pre>
             */
            public com.google.protobuf.ByteString
            getReasonBytes() {
                java.lang.Object ref = reason_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    reason_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string reason = 2 [default = "Unstated reason"];</code>
             *
             * <pre>
             **
             * The reason for the disconnection.
             * </pre>
             */
            public Builder setReason(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                reason_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string reason = 2 [default = "Unstated reason"];</code>
             *
             * <pre>
             **
             * The reason for the disconnection.
             * </pre>
             */
            public Builder clearReason() {
                bitField0_ = (bitField0_ & ~0x00000002);
                reason_ = getDefaultInstance().getReason();
                onChanged();
                return this;
            }
            /**
             * <code>optional string reason = 2 [default = "Unstated reason"];</code>
             *
             * <pre>
             **
             * The reason for the disconnection.
             * </pre>
             */
            public Builder setReasonBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                reason_ = value;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:net.beaconpe.bouncyball.network.protocol.CloseConnection)
        }

        static {
            defaultInstance = new CloseConnection(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:net.beaconpe.bouncyball.network.protocol.CloseConnection)
    }

    public interface SendMessageOrBuilder extends
            // @@protoc_insertion_point(interface_extends:net.beaconpe.bouncyball.network.protocol.SendMessage)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        boolean hasPacketID();
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID();

        /**
         * <code>required string reciever = 2;</code>
         *
         * <pre>
         **
         * The Reciever of this message.
         * </pre>
         */
        boolean hasReciever();
        /**
         * <code>required string reciever = 2;</code>
         *
         * <pre>
         **
         * The Reciever of this message.
         * </pre>
         */
        java.lang.String getReciever();
        /**
         * <code>required string reciever = 2;</code>
         *
         * <pre>
         **
         * The Reciever of this message.
         * </pre>
         */
        com.google.protobuf.ByteString
        getRecieverBytes();

        /**
         * <code>required bool messageSentInPlain = 3;</code>
         *
         * <pre>
         **
         * If this message was sent in plaintext.
         * </pre>
         */
        boolean hasMessageSentInPlain();
        /**
         * <code>required bool messageSentInPlain = 3;</code>
         *
         * <pre>
         **
         * If this message was sent in plaintext.
         * </pre>
         */
        boolean getMessageSentInPlain();

        /**
         * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
         *
         * <pre>
         **
         * The message in plaintext. Can only be sent if messageSentInPlain is true.
         * </pre>
         */
        boolean hasMessagePlain();
        /**
         * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
         *
         * <pre>
         **
         * The message in plaintext. Can only be sent if messageSentInPlain is true.
         * </pre>
         */
        java.lang.String getMessagePlain();
        /**
         * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
         *
         * <pre>
         **
         * The message in plaintext. Can only be sent if messageSentInPlain is true.
         * </pre>
         */
        com.google.protobuf.ByteString
        getMessagePlainBytes();

        /**
         * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
         *
         * <pre>
         **
         * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
         * </pre>
         */
        boolean hasMessageJson();
        /**
         * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
         *
         * <pre>
         **
         * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
         * </pre>
         */
        java.lang.String getMessageJson();
        /**
         * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
         *
         * <pre>
         **
         * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
         * </pre>
         */
        com.google.protobuf.ByteString
        getMessageJsonBytes();
    }
    /**
     * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.SendMessage}
     */
    public static final class SendMessage extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:net.beaconpe.bouncyball.network.protocol.SendMessage)
            SendMessageOrBuilder {
        // Use SendMessage.newBuilder() to construct.
        private SendMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }
        private SendMessage(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final SendMessage defaultInstance;
        public static SendMessage getDefaultInstance() {
            return defaultInstance;
        }

        public SendMessage getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }
        private SendMessage(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            int rawValue = input.readEnum();
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                packetID_ = value;
                            }
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            reciever_ = bs;
                            break;
                        }
                        case 24: {
                            bitField0_ |= 0x00000004;
                            messageSentInPlain_ = input.readBool();
                            break;
                        }
                        case 34: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000008;
                            messagePlain_ = bs;
                            break;
                        }
                        case 42: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000010;
                            messageJson_ = bs;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage.Builder.class);
        }

        public static com.google.protobuf.Parser<SendMessage> PARSER =
                new com.google.protobuf.AbstractParser<SendMessage>() {
                    public SendMessage parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new SendMessage(input, extensionRegistry);
                    }
                };

        @java.lang.Override
        public com.google.protobuf.Parser<SendMessage> getParserForType() {
            return PARSER;
        }

        private int bitField0_;
        public static final int PACKETID_FIELD_NUMBER = 1;
        private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_;
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public boolean hasPacketID() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
         */
        public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
            return packetID_;
        }

        public static final int RECIEVER_FIELD_NUMBER = 2;
        private java.lang.Object reciever_;
        /**
         * <code>required string reciever = 2;</code>
         *
         * <pre>
         **
         * The Reciever of this message.
         * </pre>
         */
        public boolean hasReciever() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string reciever = 2;</code>
         *
         * <pre>
         **
         * The Reciever of this message.
         * </pre>
         */
        public java.lang.String getReciever() {
            java.lang.Object ref = reciever_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    reciever_ = s;
                }
                return s;
            }
        }
        /**
         * <code>required string reciever = 2;</code>
         *
         * <pre>
         **
         * The Reciever of this message.
         * </pre>
         */
        public com.google.protobuf.ByteString
        getRecieverBytes() {
            java.lang.Object ref = reciever_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                reciever_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int MESSAGESENTINPLAIN_FIELD_NUMBER = 3;
        private boolean messageSentInPlain_;
        /**
         * <code>required bool messageSentInPlain = 3;</code>
         *
         * <pre>
         **
         * If this message was sent in plaintext.
         * </pre>
         */
        public boolean hasMessageSentInPlain() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required bool messageSentInPlain = 3;</code>
         *
         * <pre>
         **
         * If this message was sent in plaintext.
         * </pre>
         */
        public boolean getMessageSentInPlain() {
            return messageSentInPlain_;
        }

        public static final int MESSAGE_PLAIN_FIELD_NUMBER = 4;
        private java.lang.Object messagePlain_;
        /**
         * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
         *
         * <pre>
         **
         * The message in plaintext. Can only be sent if messageSentInPlain is true.
         * </pre>
         */
        public boolean hasMessagePlain() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
         *
         * <pre>
         **
         * The message in plaintext. Can only be sent if messageSentInPlain is true.
         * </pre>
         */
        public java.lang.String getMessagePlain() {
            java.lang.Object ref = messagePlain_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    messagePlain_ = s;
                }
                return s;
            }
        }
        /**
         * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
         *
         * <pre>
         **
         * The message in plaintext. Can only be sent if messageSentInPlain is true.
         * </pre>
         */
        public com.google.protobuf.ByteString
        getMessagePlainBytes() {
            java.lang.Object ref = messagePlain_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                messagePlain_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int MESSAGE_JSON_FIELD_NUMBER = 5;
        private java.lang.Object messageJson_;
        /**
         * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
         *
         * <pre>
         **
         * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
         * </pre>
         */
        public boolean hasMessageJson() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
         *
         * <pre>
         **
         * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
         * </pre>
         */
        public java.lang.String getMessageJson() {
            java.lang.Object ref = messageJson_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    messageJson_ = s;
                }
                return s;
            }
        }
        /**
         * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
         *
         * <pre>
         **
         * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
         * </pre>
         */
        public com.google.protobuf.ByteString
        getMessageJsonBytes() {
            java.lang.Object ref = messageJson_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                messageJson_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            reciever_ = "";
            messageSentInPlain_ = false;
            messagePlain_ = "Message is not sent plain.";
            messageJson_ = "Message is not sent in JSON.";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasPacketID()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasReciever()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMessageSentInPlain()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeEnum(1, packetID_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getRecieverBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeBool(3, messageSentInPlain_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeBytes(4, getMessagePlainBytes());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeBytes(5, getMessageJsonBytes());
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, packetID_.getNumber());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getRecieverBytes());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBoolSize(3, messageSentInPlain_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(4, getMessagePlainBytes());
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(5, getMessageJsonBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }
        public static net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage prototype) {
            return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }
        /**
         * Protobuf type {@code net.beaconpe.bouncyball.network.protocol.SendMessage}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:net.beaconpe.bouncyball.network.protocol.SendMessage)
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessageOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage.class, net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage.Builder.class);
            }

            // Construct using net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }
            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                bitField0_ = (bitField0_ & ~0x00000001);
                reciever_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                messageSentInPlain_ = false;
                bitField0_ = (bitField0_ & ~0x00000004);
                messagePlain_ = "Message is not sent plain.";
                bitField0_ = (bitField0_ & ~0x00000008);
                messageJson_ = "Message is not sent in JSON.";
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_descriptor;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage getDefaultInstanceForType() {
                return net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage.getDefaultInstance();
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage build() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage buildPartial() {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage result = new net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.packetID_ = packetID_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.reciever_ = reciever_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.messageSentInPlain_ = messageSentInPlain_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.messagePlain_ = messagePlain_;
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.messageJson_ = messageJson_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage) {
                    return mergeFrom((net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage)other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage other) {
                if (other == net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage.getDefaultInstance()) return this;
                if (other.hasPacketID()) {
                    setPacketID(other.getPacketID());
                }
                if (other.hasReciever()) {
                    bitField0_ |= 0x00000002;
                    reciever_ = other.reciever_;
                    onChanged();
                }
                if (other.hasMessageSentInPlain()) {
                    setMessageSentInPlain(other.getMessageSentInPlain());
                }
                if (other.hasMessagePlain()) {
                    bitField0_ |= 0x00000008;
                    messagePlain_ = other.messagePlain_;
                    onChanged();
                }
                if (other.hasMessageJson()) {
                    bitField0_ |= 0x00000010;
                    messageJson_ = other.messageJson_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasPacketID()) {

                    return false;
                }
                if (!hasReciever()) {

                    return false;
                }
                if (!hasMessageSentInPlain()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (net.beaconpe.bouncyball.network.protocol.BouncyP2P.SendMessage) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }
            private int bitField0_;

            private net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public boolean hasPacketID() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID getPacketID() {
                return packetID_;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder setPacketID(net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                packetID_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required .net.beaconpe.bouncyball.network.protocol.PacketID packetID = 1;</code>
             */
            public Builder clearPacketID() {
                bitField0_ = (bitField0_ & ~0x00000001);
                packetID_ = net.beaconpe.bouncyball.network.protocol.BouncyP2P.PacketID.SERVER_REGISTRATION_REQUEST;
                onChanged();
                return this;
            }

            private java.lang.Object reciever_ = "";
            /**
             * <code>required string reciever = 2;</code>
             *
             * <pre>
             **
             * The Reciever of this message.
             * </pre>
             */
            public boolean hasReciever() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>required string reciever = 2;</code>
             *
             * <pre>
             **
             * The Reciever of this message.
             * </pre>
             */
            public java.lang.String getReciever() {
                java.lang.Object ref = reciever_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        reciever_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>required string reciever = 2;</code>
             *
             * <pre>
             **
             * The Reciever of this message.
             * </pre>
             */
            public com.google.protobuf.ByteString
            getRecieverBytes() {
                java.lang.Object ref = reciever_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    reciever_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>required string reciever = 2;</code>
             *
             * <pre>
             **
             * The Reciever of this message.
             * </pre>
             */
            public Builder setReciever(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                reciever_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required string reciever = 2;</code>
             *
             * <pre>
             **
             * The Reciever of this message.
             * </pre>
             */
            public Builder clearReciever() {
                bitField0_ = (bitField0_ & ~0x00000002);
                reciever_ = getDefaultInstance().getReciever();
                onChanged();
                return this;
            }
            /**
             * <code>required string reciever = 2;</code>
             *
             * <pre>
             **
             * The Reciever of this message.
             * </pre>
             */
            public Builder setRecieverBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                reciever_ = value;
                onChanged();
                return this;
            }

            private boolean messageSentInPlain_ ;
            /**
             * <code>required bool messageSentInPlain = 3;</code>
             *
             * <pre>
             **
             * If this message was sent in plaintext.
             * </pre>
             */
            public boolean hasMessageSentInPlain() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>required bool messageSentInPlain = 3;</code>
             *
             * <pre>
             **
             * If this message was sent in plaintext.
             * </pre>
             */
            public boolean getMessageSentInPlain() {
                return messageSentInPlain_;
            }
            /**
             * <code>required bool messageSentInPlain = 3;</code>
             *
             * <pre>
             **
             * If this message was sent in plaintext.
             * </pre>
             */
            public Builder setMessageSentInPlain(boolean value) {
                bitField0_ |= 0x00000004;
                messageSentInPlain_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>required bool messageSentInPlain = 3;</code>
             *
             * <pre>
             **
             * If this message was sent in plaintext.
             * </pre>
             */
            public Builder clearMessageSentInPlain() {
                bitField0_ = (bitField0_ & ~0x00000004);
                messageSentInPlain_ = false;
                onChanged();
                return this;
            }

            private java.lang.Object messagePlain_ = "Message is not sent plain.";
            /**
             * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
             *
             * <pre>
             **
             * The message in plaintext. Can only be sent if messageSentInPlain is true.
             * </pre>
             */
            public boolean hasMessagePlain() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
             *
             * <pre>
             **
             * The message in plaintext. Can only be sent if messageSentInPlain is true.
             * </pre>
             */
            public java.lang.String getMessagePlain() {
                java.lang.Object ref = messagePlain_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        messagePlain_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
             *
             * <pre>
             **
             * The message in plaintext. Can only be sent if messageSentInPlain is true.
             * </pre>
             */
            public com.google.protobuf.ByteString
            getMessagePlainBytes() {
                java.lang.Object ref = messagePlain_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    messagePlain_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
             *
             * <pre>
             **
             * The message in plaintext. Can only be sent if messageSentInPlain is true.
             * </pre>
             */
            public Builder setMessagePlain(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                messagePlain_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
             *
             * <pre>
             **
             * The message in plaintext. Can only be sent if messageSentInPlain is true.
             * </pre>
             */
            public Builder clearMessagePlain() {
                bitField0_ = (bitField0_ & ~0x00000008);
                messagePlain_ = getDefaultInstance().getMessagePlain();
                onChanged();
                return this;
            }
            /**
             * <code>optional string message_plain = 4 [default = "Message is not sent plain."];</code>
             *
             * <pre>
             **
             * The message in plaintext. Can only be sent if messageSentInPlain is true.
             * </pre>
             */
            public Builder setMessagePlainBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                messagePlain_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object messageJson_ = "Message is not sent in JSON.";
            /**
             * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
             *
             * <pre>
             **
             * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
             * </pre>
             */
            public boolean hasMessageJson() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }
            /**
             * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
             *
             * <pre>
             **
             * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
             * </pre>
             */
            public java.lang.String getMessageJson() {
                java.lang.Object ref = messageJson_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        messageJson_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }
            /**
             * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
             *
             * <pre>
             **
             * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
             * </pre>
             */
            public com.google.protobuf.ByteString
            getMessageJsonBytes() {
                java.lang.Object ref = messageJson_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    messageJson_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }
            /**
             * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
             *
             * <pre>
             **
             * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
             * </pre>
             */
            public Builder setMessageJson(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                messageJson_ = value;
                onChanged();
                return this;
            }
            /**
             * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
             *
             * <pre>
             **
             * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
             * </pre>
             */
            public Builder clearMessageJson() {
                bitField0_ = (bitField0_ & ~0x00000010);
                messageJson_ = getDefaultInstance().getMessageJson();
                onChanged();
                return this;
            }
            /**
             * <code>optional string message_json = 5 [default = "Message is not sent in JSON."];</code>
             *
             * <pre>
             **
             * The message encoded in JSON with formatting. Can only be sent if messageSentInPlain is false.
             * </pre>
             */
            public Builder setMessageJsonBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000010;
                messageJson_ = value;
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:net.beaconpe.bouncyball.network.protocol.SendMessage)
        }

        static {
            defaultInstance = new SendMessage(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:net.beaconpe.bouncyball.network.protocol.SendMessage)
    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;
    static {
        java.lang.String[] descriptorData = {
                "\n\017BouncyP2P.proto\022(net.beaconpe.bouncyba" +
                        "ll.network.protocol\"\206\001\n\031ServerRegistrati" +
                        "onRequest\022D\n\010packetID\030\001 \002(\01622.net.beacon" +
                        "pe.bouncyball.network.protocol.PacketID\022" +
                        "\022\n\nserverName\030\002 \002(\t\022\017\n\007proxyID\030\003 \002(\004\"b\n\032" +
                        "ServerRegistrationAccepted\022D\n\010packetID\030\001" +
                        " \002(\01622.net.beaconpe.bouncyball.network.p" +
                        "rotocol.PacketID\"\305\002\n\030ServerRegistrationD" +
                        "enied\022D\n\010packetID\030\001 \002(\01622.net.beaconpe.b" +
                        "ouncyball.network.protocol.PacketID\022c\n\006r",
                "eason\030\002 \001(\0162I.net.beaconpe.bouncyball.ne" +
                        "twork.protocol.ServerRegistrationDenied." +
                        "Reason:\010UNSTATED\022,\n\013otherReason\030\003 \001(\t:\027N" +
                        "ot Sent: other reason.\"P\n\006Reason\022\014\n\010UNST" +
                        "ATED\020\000\022\024\n\020PROXY_ID_INVALID\020\001\022\027\n\023SERVER_N" +
                        "AME_INVALID\020\002\022\t\n\005OTHER\020\003\"x\n\017CloseConnect" +
                        "ion\022D\n\010packetID\030\001 \002(\01622.net.beaconpe.bou" +
                        "ncyball.network.protocol.PacketID\022\037\n\006rea" +
                        "son\030\002 \001(\t:\017Unstated reason\"\350\001\n\013SendMessa" +
                        "ge\022D\n\010packetID\030\001 \002(\01622.net.beaconpe.boun",
                "cyball.network.protocol.PacketID\022\020\n\010reci" +
                        "ever\030\002 \002(\t\022\032\n\022messageSentInPlain\030\003 \002(\010\0221" +
                        "\n\rmessage_plain\030\004 \001(\t:\032Message is not se" +
                        "nt plain.\0222\n\014message_json\030\005 \001(\t:\034Message" +
                        " is not sent in JSON.*\225\001\n\010PacketID\022\037\n\033SE" +
                        "RVER_REGISTRATION_REQUEST\020\000\022 \n\034SERVER_RE" +
                        "GISTRATION_ACCEPTED\020\001\022\036\n\032SERVER_REGISTRA" +
                        "TION_DENIED\020\002\022\024\n\020CLOSE_CONNECTION\020\003\022\020\n\014S" +
                        "END_MESSAGE\020\004"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[] {
                        }, assigner);
        internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationRequest_descriptor,
                new java.lang.String[] { "PacketID", "ServerName", "ProxyID", });
        internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationAccepted_descriptor,
                new java.lang.String[] { "PacketID", });
        internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_descriptor =
                getDescriptor().getMessageTypes().get(2);
        internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_net_beaconpe_bouncyball_network_protocol_ServerRegistrationDenied_descriptor,
                new java.lang.String[] { "PacketID", "Reason", "OtherReason", });
        internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_descriptor =
                getDescriptor().getMessageTypes().get(3);
        internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_net_beaconpe_bouncyball_network_protocol_CloseConnection_descriptor,
                new java.lang.String[] { "PacketID", "Reason", });
        internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_descriptor =
                getDescriptor().getMessageTypes().get(4);
        internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_net_beaconpe_bouncyball_network_protocol_SendMessage_descriptor,
                new java.lang.String[] { "PacketID", "Reciever", "MessageSentInPlain", "MessagePlain", "MessageJson", });
    }

    // @@protoc_insertion_point(outer_class_scope)
}
